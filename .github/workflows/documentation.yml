# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python Documentation

on:
  push:
    tags:
      - 'v*'
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2   
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 mock pygame pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Set env
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Echo Version Tag
      run: |
        echo $RELEASE_VERSION
        echo ${{ env.RELEASE_VERSION }}
    - name: Create Download Directory
      run: mkdir downloads
      
      #To extract docstring.
    - name: Create docs
      run: |
        python -m pydoc -w ./
        mv *.html ./downloads
    - name: upload documents
      uses: actions/upload-artifact@v2  #To upload content as artifact
      with:
        name: assetDocuments
        path: downloads
    - name: Download Content
      uses: actions/download-artifact@v2 #Download content as artifact
      with:
        name: assetDocuments
    - name: Create GitHub release
      id: create-new-release
      uses: actions/create-release@v1 #Prepare release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Release ${{ env.RELEASE_VERSION }}
    - name: Archive site content
      uses: thedoctor0/zip-release@master #Archive zip content
      with:
        filename: content.zip
   
    - name: Upload release asset
      uses: actions/upload-release-asset@v1 #Upload release asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./content.zip
        asset_name: document-v${{ env.RELEASE_VERSION }}.zip
        asset_content_type: application/zip
