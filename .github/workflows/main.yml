name: Python CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


  #schedule: #Set workflow to run every day of the week from Monday to Saturday at 7:00 UTC
  #- cron: "0 7 * * 1-7"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # To set up Python 3.6 Environment
      - name: Set up Python 3.6 Environment
        uses: actions/setup-python@v1 
        with:   
          python-version: "3.6"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Test with pytest
        id: TestWithPytest
        run: |
             pytest -v --junitxml=report.xml
      - if: ${{failure()}}       
        name: Create Issues
      #raise notification in GitHub Issues
        uses: nashmaniac/create-issue-action@v1.1
        with:
            title: Build Failed
            token: ${{secrets.GITHUB_TOKEN}}
            #assignees: ${{github.actor}}  #The login of the user that initiated the workflow run.
            labels: workflow-failed
            body: Workflow failed for commit ${{github.sha}} @ ${{github.ref}}    
   
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1.5
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          files: report.xml
